<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        引用类型的自动注入：spring框架根据某些规则可以给引用类型赋值，不用再给引用类型赋值了

        使用的规则常用的是byName,byType。
            1.byName（按名称注入）：Java类中引用类型的属性名和spring容器中（配置文件）<bean>的id名称一样
                                    且数据类型是一致的，这样的容器中的bean，spring能够赋值给引用类型

                    语法：
                    <bean id="yyy" class="xxx" autowire="byName">
                        简单类型属性赋值
                    </bean>

            2.byType（按类型注入）：Java类中引用类型的数据类型和spring容器中（配置文件）<bean>的class属性
                                     是同源关系的，这样的bean能够赋值给引用类型
              同源就是一类的意思：
                1.Java类中引用类型的数据类型和class类型的值是一样的
                2.Java类中引用类型的数据类型和class类型的值是父子类关系的
                3.Java类中引用类型的数据类型和class类型的值是接口和实现类关系的
              语法：
                <bean id="yyy" class="xxx" autowire="byType">
                        简单类型属性赋值
                </bean>
    -->
    <bean id="myStudent" class="com.bjpowernode.ba04.Student" autowire="byName">
        <property name="name" value="李四lisi"/><!--setName("李四")-->
        <property name="age" value="20"/><!--setAge(20)-->
        <!--引用类型-->
<!--        <property name="school" ref="mySchool"/>-->
    </bean>

    <!--声明School对象-->
    <bean id="school" class="com.bjpowernode.ba04.School">
        <property name="name" value="四川大学"/>
        <property name="address" value="成都"/>
    </bean>




</beans>